# @format

name: k8s deployment
on:
  push:
    branches: main
jobs:
  # pass-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: build frontend application for test coverage
  #       run: docker build -t hamzazahid/react-test -f ./client/Dockerfile.dev ./client
  #     - name: run frontend application for test coverage
  #       run: docker run hamzazahid/react-test npm test -- --coverage

  docker-image-build:
    # needs: pass-test
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.time-tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: build worker image and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./worker/
      #     push: true
      #     tags: user/app:latest
      - name: get time tag
        id: time-tag
        run: echo "::set-output name=tag::$(date +%s)"
      - name: check time tag
        run: echo ${{ steps.time-tag.outputs.tag }}
      # - name: build worker image
      #   run: docker build -t hamzazahid/multi-worker:latest -t hamzazahid/multi-worker:latest -t hamzazahid/multi-worker:$(date +%s) -f ./worker/Dockerfile ./worker
      # - name: build client image
      #   run: docker build -t hamzazahid/multi-client:$(date +%s) -f ./client/Dockerfile ./client
      # - name: build server image
      #   run: docker build -t hamzazahid/multi-server:latest -t hamzazahid/multi-server:$(date +%s) -f ./server/Dockerfile ./server
      # - name: check docker images
      #   run: docker image ls | less
      # - name: multi-client push on docker registry with latest tag
      #   run: docker push hamzazahid/multi-client:latest
      # - name: multi-server push on docker registry with latest tag
      #   run: docker push hamzazahid/multi-server:latest
      # - name: multi-worker push on docker registry with latest tag
      #   run: docker push hamzazahid/multi-worker:latest
      # - name: multi-client push on docker registry with latest current time:$(date +%s)
      #   run: docker push hamzazahid/multi-client:$(date +%s)
      # - name: multi-server push on docker registry with latest current time:$(date +%s)
      #   run: docker push hamzazahid/multi-server:$(date +%s)
      # - name: multi-worker push on docker registry with latest current time:$(date +%s)
      #   run: docker push hamzazahid/multi-worker:$(date +%s)
  test:
    runs-on: ubuntu-latest
    needs: docker-image-build
    env:
      tag: ${{ needs.docker-image-build.outputs.tag }}
      hi: git_hash=$(git rev-parse --short "$GITHUB_SHA")
      hello: git_branch=${GITHUB_REF#refs/heads/}
    steps:
      - uses: actions/checkout@v2
      # - name: build frontend application for test coverage
      #   run: docker build -t hamzazahid/react-test -f ./client/Dockerfile.dev ./client
      # - name: run frontend application for test coverage
      #   run: docker run hamzazahid/react-test npm test -- --coverage
      - name: check time tag same
        run: echo ${{ needs.docker-image-build.outputs.tag }} | grep -q ${{ env.tag }}
      - name: get git hash and branch
        run: echo ${{ env.hi }} | grep -q ${{ env.hello }}

  # deploy-k8s:
  #   needs: docker-image-build
  #   runs-on: self-hosted
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: check folders
  #       run: ls -la | less
  #     - name: print hello
  #       run: echo "Hello World!"
